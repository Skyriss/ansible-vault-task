---
- name: Prepare hostnames variable
  set_fact:
    fqdn: "{{ (lookup('template', './hosts.j2').split(',')) | replace('\\n','')}}"

- name: Select Nginx user
  set_fact:
    nginx_user: "www-data"
  when: ansible_facts['os_family'] == 'Debian'

- name: Select Nginx user
  set_fact:
    nginx_user: "nginx"
  when: ansible_facts['os_family'] == 'RedHat'
  

- name: Install new nginx config
  vars:
    mem_size: "{{ ansible_facts['memtotal_mb'] }}"
  template:
      src: nginx.conf.j2
      dest: /etc/nginx/nginx.conf
      owner: root
      group: root
      mode: '0644'
  notify: reload_nginx

- name: Remove default vhost config file
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: reload_nginx

- name: Create sites-enabled directory
  file:
    path: /etc/nginx/sites-enabled
    state: directory

- name: Create sites-available directory
  file:
    path: /etc/nginx/sites-available
    state: directory    

- name: Install vhost config
  template:
    src: virtualhost.conf.j2
    dest: /etc/nginx/sites-available/{{domain_name}}.conf
    owner: root
    group: root
    mode: '0644'
  notify: reload_nginx

- name: Create a symbolic link to sites-enabled
  file:
    src: /etc/nginx/sites-available/{{ domain_name }}.conf
    dest: /etc/nginx/sites-enabled/{{ domain_name }}.conf
    owner: root
    group: root
    state: link
  notify: reload_nginx

- name: Create folder for website
  file:
    path: "{{ nginx_root_dir }}/{{ item }}"
    owner: root
    group: root
    mode: '0755'
    state: directory
  loop: "{{ fqdn }}"

- name: Put index.html
  template:
    src: index.j2
    dest: "{{ nginx_root_dir }}/{{ item }}/index.html"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: '0644'
  loop: "{{ fqdn }}"

- name: reload_nginx
  service:
    name: nginx
    state: reloaded
